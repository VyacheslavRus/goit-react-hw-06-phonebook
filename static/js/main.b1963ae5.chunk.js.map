{"version":3,"sources":["Components/clientList/ClientListStyled.js","Components/clientList/ClientList.js","Components/clientsForm/ClientsFormStyled.js","Components/clientsForm/ClientsForm.js","Components/filter/FilterStyled.js","Components/filter/Filter.js","redux/clients/clientsReducer/clientsAction.js","redux/clients/filterReducer/filterAction.js","Components/clients/ClientStyled.js","Components/clients/Clients.js","App.js","redux/clients/filterReducer/filterReduser.js","redux/clients/clientsReducer/clientsReducer.js","redux/store.js","index.js"],"names":["ClientListStyled","styled","ul","ClientList","clients","deleteClient","map","client","name","number","type","onClick","id","ClientsFormStyled","form","ClientsForm","state","changeInput","e","target","value","setState","onSubmit","preventDefault","props","onCheckRepeated","alert","addClient","this","onChange","pattern","title","required","Component","FilterStyled","div","Filter","filter","doFilter","addALLClients","createAction","ClientStyled","h1","Clients","a","axios","post","response","data","delete","getFilter","contacts","items","contact","toLowerCase","includes","some","get","contactsObj","Object","keys","key","console","log","connect","dispatch","App","filterReducer","createReducer","_","payload","itemsReduser","el","rootReducer","combineReducers","clientsReducer","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1963ae5.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const ClientListStyled = styled.ul`\r\n  text-align: center\r\n  width: 200px;\r\n  li {\r\n    list-style: none;\r\n  }\r\n\r\n  button {\r\n    width: 60px;\r\n    height: 20px;\r\n    border-radius: 5px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { ClientListStyled } from \"./ClientListStyled\";\r\n\r\nconst ClientList = ({ clients, deleteClient }) => {\r\n  return (\r\n    <ClientListStyled>\r\n      {clients?.map((client) => (\r\n        <li key={client.id}>\r\n          <p>\r\n            {client.name}:{client.number}\r\n          </p>\r\n          <button type=\"button\" onClick={deleteClient} id={client.id}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ClientListStyled>\r\n  );\r\n};\r\n\r\nexport default ClientList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ClientsFormStyled = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  input {\r\n    border-radius: 5px;\r\n    width: 175px;\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  button {\r\n    border-radius: 5px;\r\n    width: 50px;\r\n    margin: 0 auto;\r\n  }\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport { ClientsFormStyled } from \"./ClientsFormStyled\";\r\n\r\nclass ClientsForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  changeInput = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.props.onCheckRepeated(this.state.name)) {\r\n      alert(`${this.state.name} is already in contacts.`);\r\n      return;\r\n    }\r\n    this.props.addClient(this.state);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <ClientsFormStyled onSubmit={this.onSubmit}>\r\n          Name:\r\n          <input\r\n            onChange={this.changeInput}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n          Number:\r\n          <input\r\n            onChange={this.changeInput}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n          <button type=\"submit\">Add</button>\r\n        </ClientsFormStyled>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClientsForm;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FilterStyled = styled.div`\r\n  input {\r\n    border-radius: 5px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { FilterStyled } from \"./FilterStyled\";\r\n\r\nconst Filter = ({ filter, doFilter }) => {\r\n  return (\r\n    <FilterStyled>\r\n      <h2>Find your contact by name</h2>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        onChange={doFilter}\r\n        value={filter}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n    </FilterStyled>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addALLClients = createAction(\"addALLClients\");\r\nexport const addClient = createAction(\"addClient\");\r\nexport const deleteClient = createAction(\"deleteClient\");\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\nexport const doFilter = createAction(\"doFilter\");\r\n","import styled from \"styled-components\";\r\n\r\nexport const ClientStyled = styled.h1`\r\n  text-align: center;\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport ClientList from \"../clientList/ClientList\";\r\nimport ClientsForm from \"../clientsForm/ClientsForm\";\r\nimport Filter from \"../filter/Filter\";\r\nimport axios from \"axios\";\r\nimport {\r\n  addALLClients,\r\n  addClient,\r\n  deleteClient,\r\n} from \"../../redux/clients/clientsReducer/clientsAction\";\r\nimport { doFilter } from \"../../redux/clients/filterReducer/filterAction\";\r\nimport { connect } from \"react-redux\";\r\nimport { ClientStyled } from \"./ClientStyled\";\r\n\r\nclass Clients extends Component {\r\n  // state = {\r\n  //   contacts: [],\r\n  //   filter: \"\",\r\n  // };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://shop-a2177-default-rtdb.firebaseio.com/clients.json`\r\n      );\r\n      if (response.data) {\r\n        const contactsObj = Object.keys(response.data).map((key) => ({\r\n          ...response.data[key],\r\n          id: key,\r\n        }));\r\n\r\n        console.log(contactsObj);\r\n        this.props.addALLClients(contactsObj);\r\n        // this.setState({ contacts: contactsObj });\r\n      } else return;\r\n    } catch (error) {}\r\n  }\r\n\r\n  addClient = async (client) => {\r\n    try {\r\n      const response = await axios.post(\r\n        `https://shop-a2177-default-rtdb.firebaseio.com/clients.json`,\r\n        client\r\n      );\r\n      this.props.addClient({ ...client, id: response.data.name });\r\n      // this.setState((prevState) => ({\r\n      //   contacts: [\r\n      //     ...prevState.contacts,\r\n      //     { ...client, id: response.data.name },\r\n      //   ],\r\n      // }));\r\n    } catch (error) {}\r\n  };\r\n\r\n  deleteClient = async (e) => {\r\n    try {\r\n      let { id } = e.target;\r\n      await axios.delete(\r\n        `https://shop-a2177-default-rtdb.firebaseio.com/clients/${id}.json`\r\n      );\r\n      this.props.deleteClient(id);\r\n      // this.setState({\r\n      //   contacts: this.state.contacts.filter((el) => el.id !== id),\r\n      // });\r\n    } catch (error) {}\r\n  };\r\n\r\n  getFilter = () => {\r\n    return this.props.contacts.items.filter((contact) =>\r\n      contact.name\r\n        .toLowerCase()\r\n        .includes(this.props.contacts.filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  doFilter = (e) => {\r\n    const { value } = e.target;\r\n    this.props.doFilter(value);\r\n    // this.setState({ filter: value });\r\n  };\r\n\r\n  onCheckRepeated = (name) => {\r\n    return this.props.contacts.items.some((contact) => contact.name === name);\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props.contacts);\r\n    return (\r\n      <>\r\n        <ClientStyled>Phonebook</ClientStyled>\r\n        <ClientsForm\r\n          addClient={this.addClient}\r\n          onCheckRepeated={this.onCheckRepeated}\r\n        />\r\n\r\n        <Filter doFilter={this.doFilter} filter={this.props.contacts.filter} />\r\n        <h2>Contacts:</h2>\r\n        <ClientList\r\n          clients={this.getFilter()}\r\n          deleteClient={this.deleteClient}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: {\r\n    items: state.contacts.items,\r\n    filter: state.contacts.filter,\r\n  },\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addALLClients: (items) => {\r\n      dispatch(addALLClients(items));\r\n    },\r\n    addClient: (items) => {\r\n      dispatch(addClient(items));\r\n    },\r\n    deleteClient: (items) => {\r\n      dispatch(deleteClient(items));\r\n    },\r\n    doFilter: (filter) => {\r\n      dispatch(doFilter(filter));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Clients);\r\n","import React from \"react\";\nimport Clients from \"./Components/clients/Clients\";\n\nconst App = () => {\n  return <Clients />;\n};\n\nexport default App;\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { doFilter } from \"./filterAction\";\r\nconst filterReducer = createReducer(\"\", {\r\n  [doFilter]: (_, { payload }) => payload,\r\n});\r\nexport default filterReducer;\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { addALLClients, addClient, deleteClient } from \"./clientsAction\";\r\n\r\nconst itemsReduser = createReducer([], {\r\n  [addALLClients]: (_, { payload }) => payload,\r\n  [addClient]: (state, { payload }) => [...state, payload],\r\n  [deleteClient]: (state, { payload }) => [\r\n    ...state.filter((el) => el.id !== payload),\r\n  ],\r\n});\r\n\r\nexport default itemsReduser;\r\n","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\r\nimport filterReducer from \"./clients/filterReducer/filterReduser\";\r\nimport clientsReducer from \"./clients/clientsReducer/clientsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  items: clientsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: rootReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}